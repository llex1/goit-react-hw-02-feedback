{"version":3,"sources":["App/components/FeedbackButton/FeedbackButton.jsx","App/components/FeedbackResults/FeedbackResuts.jsx","App/data/feedbackState.js","App/App.jsx","index.js"],"names":["FeedbackButton","feedbackChange","onClick","data-type","FeedbackResults","data","total","Object","values","reduce","acc","el","good","neutral","bad","Math","trunc","state","App","feedbackState","event","target","nodeName","setState","dataset","type","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uPAiBeA,MAdf,YAA6C,IAAnBC,EAAkB,EAAlBA,eACxB,OACE,sBAAKC,QAASD,EAAd,UACE,wBAAQE,YAAU,OAAlB,kBACA,wBAAQA,YAAU,UAAlB,qBACA,wBAAQA,YAAU,MAAlB,qBCwBSC,MA7Bf,YAAoC,IAATC,EAAQ,EAARA,KACnBC,EAAQC,OAAOC,OAAOH,GAAMI,QAAO,SAACC,EAAKC,GAAN,OAAcD,EAAOC,IAAK,GACnE,OAAIL,EAEA,eAAC,WAAD,WACE,uCAAUD,EAAKO,QACf,0CAAaP,EAAKQ,WAClB,sCAASR,EAAKS,OACd,uCAAUR,KACV,mDAAsBS,KAAKC,MAAOX,EAAKO,KAAON,EAAS,KAAvD,UAKF,cAAC,WAAD,UACE,qDCZOW,EAND,CACZL,KAAM,EACNC,QAAS,EACTC,IAAK,GCiCQI,G,kNAvBbD,MAAQE,E,EAERlB,eAAiB,SAACmB,GACc,WAA1BA,EAAMC,OAAOC,UACf,EAAKC,UAAS,SAACN,GACb,OAAO,eACJG,EAAMC,OAAOG,QAAQC,OAASR,EAAMG,EAAMC,OAAOG,QAAQC,W,uDAOhE,OACE,eAAC,WAAD,WACE,uDACA,cAAC,EAAD,CAAgBxB,eAAgByB,KAAKzB,iBACrC,cAAC,EAAD,CAAiBI,KAAMqB,KAAKT,e,GAlBlBU,cCRlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.1405616e.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction FeedbackButton({ feedbackChange }) {\n  return (\n    <div onClick={feedbackChange}>\n      <button data-type=\"good\">Good</button>\n      <button data-type=\"neutral\">Neutral</button>\n      <button data-type=\"bad\">Bad</button>\n    </div>\n  );\n}\n\nFeedbackButton.propTypes = {\n  feedbackCange: PropTypes.func,\n};\n\nexport default FeedbackButton;\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction FeedbackResults({ data }) {\n  const total = Object.values(data).reduce((acc, el) => (acc += el), 0);\n  if (total) {\n    return (\n      <Fragment>\n        <p>Good: {data.good}</p>\n        <p>Neutral: {data.neutral}</p>\n        <p>Bad: {data.bad}</p>\n        <p>Total {total}</p>\n        <p>Positive feedback {Math.trunc((data.good / total) * 100)}%</p>\n      </Fragment>\n    );\n  } else {\n    return (\n      <Fragment>\n        <p>No feedback given</p>\n      </Fragment>\n    );\n  }\n}\n\nFeedbackResults.propTypes = {\n  data: PropTypes.exact({\n    good: PropTypes.number,\n    neutral: PropTypes.number,\n    bad: PropTypes.number,\n  }),\n};\n\nexport default FeedbackResults;\n","const state = {\n  good: 0,\n  neutral: 0,\n  bad: 0\n}\n\nexport default state","import React, { Fragment, Component } from \"react\";\n\n//jsx modules\nimport FeedbackButton from \"./components/FeedbackButton\";\nimport FeedbackResults from \"./components/FeedbackResults\";\n\n//states\nimport feedbackState from \"./data/feedbackState\";\n\n//minimal css\nimport styles from \"./main.module.css\";\n\nclass App extends Component {\n  state = feedbackState;\n\n  feedbackChange = (event) => {\n    if (event.target.nodeName === \"BUTTON\") {\n      this.setState((state) => {\n        return {\n          [event.target.dataset.type]: ++state[event.target.dataset.type],\n        };\n      });\n    }\n  };\n\n  render() {\n    return (\n      <Fragment>\n        <h1>Please leave feedback</h1>\n        <FeedbackButton feedbackChange={this.feedbackChange} />\n        <FeedbackResults data={this.state} />\n      </Fragment>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}